services:
  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
      - ./backend/.env.django # Дополнительные Django-переменные
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgres://postgres:1234@db:5432/lostarkhelper
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Изолируем node_modules
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true
    depends_on:
      - backend

volumes:
  postgres_data:
  backend_static:
